/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inneractive.hermes.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** JoinEvent2 */
@org.apache.avro.specific.AvroGenerated
public class JoinEvent2 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8550021445689117106L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"JoinEvent2\",\"namespace\":\"com.inneractive.hermes.model\",\"doc\":\"JoinEvent2\",\"fields\":[{\"name\":\"sessionId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"generated for each request used to link with impression and clicks\"},{\"name\":\"eventType\",\"type\":{\"type\":\"enum\",\"name\":\"EventType\",\"doc\":\"Event type is used to \",\"symbols\":[\"AD_REQUEST\",\"DEFAULT_AD\",\"IMPRESSION\",\"CLICK\",\"NO_AD\",\"JOIN1\",\"JOIN2\"]}},{\"name\":\"dimension2\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"value2\",\"type\":\"double\",\"default\":0.0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<JoinEvent2> ENCODER =
      new BinaryMessageEncoder<JoinEvent2>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<JoinEvent2> DECODER =
      new BinaryMessageDecoder<JoinEvent2>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<JoinEvent2> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<JoinEvent2> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<JoinEvent2>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this JoinEvent2 to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a JoinEvent2 from a ByteBuffer. */
  public static JoinEvent2 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** generated for each request used to link with impression and clicks */
  @Deprecated public java.lang.String sessionId;
  @Deprecated public com.inneractive.hermes.model.EventType eventType;
  @Deprecated public java.lang.String dimension2;
  @Deprecated public double value2;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public JoinEvent2() {}

  /**
   * All-args constructor.
   * @param sessionId generated for each request used to link with impression and clicks
   * @param eventType The new value for eventType
   * @param dimension2 The new value for dimension2
   * @param value2 The new value for value2
   */
  public JoinEvent2(java.lang.String sessionId, com.inneractive.hermes.model.EventType eventType, java.lang.String dimension2, java.lang.Double value2) {
    this.sessionId = sessionId;
    this.eventType = eventType;
    this.dimension2 = dimension2;
    this.value2 = value2;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return sessionId;
    case 1: return eventType;
    case 2: return dimension2;
    case 3: return value2;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: sessionId = (java.lang.String)value$; break;
    case 1: eventType = (com.inneractive.hermes.model.EventType)value$; break;
    case 2: dimension2 = (java.lang.String)value$; break;
    case 3: value2 = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'sessionId' field.
   * @return generated for each request used to link with impression and clicks
   */
  public java.lang.String getSessionId() {
    return sessionId;
  }

  /**
   * Sets the value of the 'sessionId' field.
   * generated for each request used to link with impression and clicks
   * @param value the value to set.
   */
  public void setSessionId(java.lang.String value) {
    this.sessionId = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return The value of the 'eventType' field.
   */
  public com.inneractive.hermes.model.EventType getEventType() {
    return eventType;
  }

  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(com.inneractive.hermes.model.EventType value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'dimension2' field.
   * @return The value of the 'dimension2' field.
   */
  public java.lang.String getDimension2() {
    return dimension2;
  }

  /**
   * Sets the value of the 'dimension2' field.
   * @param value the value to set.
   */
  public void setDimension2(java.lang.String value) {
    this.dimension2 = value;
  }

  /**
   * Gets the value of the 'value2' field.
   * @return The value of the 'value2' field.
   */
  public java.lang.Double getValue2() {
    return value2;
  }

  /**
   * Sets the value of the 'value2' field.
   * @param value the value to set.
   */
  public void setValue2(java.lang.Double value) {
    this.value2 = value;
  }

  /**
   * Creates a new JoinEvent2 RecordBuilder.
   * @return A new JoinEvent2 RecordBuilder
   */
  public static com.inneractive.hermes.model.JoinEvent2.Builder newBuilder() {
    return new com.inneractive.hermes.model.JoinEvent2.Builder();
  }

  /**
   * Creates a new JoinEvent2 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new JoinEvent2 RecordBuilder
   */
  public static com.inneractive.hermes.model.JoinEvent2.Builder newBuilder(com.inneractive.hermes.model.JoinEvent2.Builder other) {
    return new com.inneractive.hermes.model.JoinEvent2.Builder(other);
  }

  /**
   * Creates a new JoinEvent2 RecordBuilder by copying an existing JoinEvent2 instance.
   * @param other The existing instance to copy.
   * @return A new JoinEvent2 RecordBuilder
   */
  public static com.inneractive.hermes.model.JoinEvent2.Builder newBuilder(com.inneractive.hermes.model.JoinEvent2 other) {
    return new com.inneractive.hermes.model.JoinEvent2.Builder(other);
  }

  /**
   * RecordBuilder for JoinEvent2 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<JoinEvent2>
    implements org.apache.avro.data.RecordBuilder<JoinEvent2> {

    /** generated for each request used to link with impression and clicks */
    private java.lang.String sessionId;
    private com.inneractive.hermes.model.EventType eventType;
    private java.lang.String dimension2;
    private double value2;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inneractive.hermes.model.JoinEvent2.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[0].schema(), other.sessionId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventType)) {
        this.eventType = data().deepCopy(fields()[1].schema(), other.eventType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.dimension2)) {
        this.dimension2 = data().deepCopy(fields()[2].schema(), other.dimension2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.value2)) {
        this.value2 = data().deepCopy(fields()[3].schema(), other.value2);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing JoinEvent2 instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inneractive.hermes.model.JoinEvent2 other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[0].schema(), other.sessionId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventType)) {
        this.eventType = data().deepCopy(fields()[1].schema(), other.eventType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.dimension2)) {
        this.dimension2 = data().deepCopy(fields()[2].schema(), other.dimension2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.value2)) {
        this.value2 = data().deepCopy(fields()[3].schema(), other.value2);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'sessionId' field.
      * generated for each request used to link with impression and clicks
      * @return The value.
      */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    /**
      * Sets the value of the 'sessionId' field.
      * generated for each request used to link with impression and clicks
      * @param value The value of 'sessionId'.
      * @return This builder.
      */
    public com.inneractive.hermes.model.JoinEvent2.Builder setSessionId(java.lang.String value) {
      validate(fields()[0], value);
      this.sessionId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionId' field has been set.
      * generated for each request used to link with impression and clicks
      * @return True if the 'sessionId' field has been set, false otherwise.
      */
    public boolean hasSessionId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'sessionId' field.
      * generated for each request used to link with impression and clicks
      * @return This builder.
      */
    public com.inneractive.hermes.model.JoinEvent2.Builder clearSessionId() {
      sessionId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventType' field.
      * @return The value.
      */
    public com.inneractive.hermes.model.EventType getEventType() {
      return eventType;
    }

    /**
      * Sets the value of the 'eventType' field.
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public com.inneractive.hermes.model.JoinEvent2.Builder setEventType(com.inneractive.hermes.model.EventType value) {
      validate(fields()[1], value);
      this.eventType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'eventType' field.
      * @return This builder.
      */
    public com.inneractive.hermes.model.JoinEvent2.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'dimension2' field.
      * @return The value.
      */
    public java.lang.String getDimension2() {
      return dimension2;
    }

    /**
      * Sets the value of the 'dimension2' field.
      * @param value The value of 'dimension2'.
      * @return This builder.
      */
    public com.inneractive.hermes.model.JoinEvent2.Builder setDimension2(java.lang.String value) {
      validate(fields()[2], value);
      this.dimension2 = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'dimension2' field has been set.
      * @return True if the 'dimension2' field has been set, false otherwise.
      */
    public boolean hasDimension2() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'dimension2' field.
      * @return This builder.
      */
    public com.inneractive.hermes.model.JoinEvent2.Builder clearDimension2() {
      dimension2 = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'value2' field.
      * @return The value.
      */
    public java.lang.Double getValue2() {
      return value2;
    }

    /**
      * Sets the value of the 'value2' field.
      * @param value The value of 'value2'.
      * @return This builder.
      */
    public com.inneractive.hermes.model.JoinEvent2.Builder setValue2(double value) {
      validate(fields()[3], value);
      this.value2 = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'value2' field has been set.
      * @return True if the 'value2' field has been set, false otherwise.
      */
    public boolean hasValue2() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'value2' field.
      * @return This builder.
      */
    public com.inneractive.hermes.model.JoinEvent2.Builder clearValue2() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public JoinEvent2 build() {
      try {
        JoinEvent2 record = new JoinEvent2();
        record.sessionId = fieldSetFlags()[0] ? this.sessionId : (java.lang.String) defaultValue(fields()[0]);
        record.eventType = fieldSetFlags()[1] ? this.eventType : (com.inneractive.hermes.model.EventType) defaultValue(fields()[1]);
        record.dimension2 = fieldSetFlags()[2] ? this.dimension2 : (java.lang.String) defaultValue(fields()[2]);
        record.value2 = fieldSetFlags()[3] ? this.value2 : (java.lang.Double) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<JoinEvent2>
    WRITER$ = (org.apache.avro.io.DatumWriter<JoinEvent2>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<JoinEvent2>
    READER$ = (org.apache.avro.io.DatumReader<JoinEvent2>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
