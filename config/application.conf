urls {
  brokers = "localhost:9092"
  schema = "http://localhost:7071"
  zookeeper = "localhost:2181"
}

topics {
  input = "AGGREGATION_EVENT"
  output = "aggregatedEvent"
  aggregation = "AGGREGATION_EVENT_JSON"
}

producerconf.ack = 0


streams {
  punctuate = 5000
  threshold = 0.0000000027
  apiendpointhost = "localhost"
  apiendpointport = 7878
  numthreads = "6"
}

consumerconf {
  readfrom = "earliest"
  groupid = "scalatopicgroup"
  autocomit = "false"
  autocomitinterval = "1000"
  sessiontimeout = "60000"
  maxpollrequest = "400"
}

kamon {
  statsd {
    hostname = "127.0.0.1"
    port = 8125
    flush-interval = 10 seconds
    metric-key-generator = kamon.statsd.TagsMetricKeyGenerator

    tags-metric-key-generator {
      include-tags = true
    }

    simple-metric-key-generator {


      # Application prefix for all metrics pushed to StatsD. The default namespacing scheme for metrics follows
      # this pattern:
      #    application.host.entity.entity-name.metric-name
      application = "hermes"

      # Includes the name of the hostname in the generated metric. When set to false, the scheme for the metrics
      # will look as follows:
      #    application.entity.entity-name.metric-name
      include-hostname = false

      # Allow users to override the name of the hostname reported by kamon. When changed, the scheme for the metrics
      # will have the following pattern:
      #   application.hostname-override-value.entity.entity-name.metric-name
      hostname-override = none

      # When the sections that make up the metric names have special characters like dots (very common in dispatcher
      # names) or forward slashes (all actor metrics) we need to sanitize those values before sending them to StatsD
      # with one of the following strategies:
      #   - normalize: changes ': ' to '-' and ' ', '/' and '.' to '_'.
      #   - percent-encode: percent encode the section on the metric name. Please note that StatsD doesn't support
      #     percent encoded metric names, this option is only useful if using our docker image which has a patched
      #     version of StatsD or if you are running your own, customized version of StatsD that supports this.
      metric-name-normalization-strategy = normalize
    }
  }
}
